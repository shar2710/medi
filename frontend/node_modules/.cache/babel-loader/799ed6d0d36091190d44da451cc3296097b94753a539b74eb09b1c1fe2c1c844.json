{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sejal\\\\Downloads\\\\MediBot-main\\\\MediBot-main\\\\work\\\\frontend\\\\src\\\\ReportAssistant.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReportAssistant() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [reply, setReply] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSend = async () => {\n    if (!file) return;\n    setLoading(true);\n    // Placeholder: No actual PDF upload yet\n    const res = await fetch('/api/report-assistant', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    });\n    const data = await res.json();\n    setReply(data.reply);\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#fa983a',\n        marginBottom: '1rem'\n      },\n      children: \"Report Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: handleFileChange,\n      style: {\n        padding: '0.7rem',\n        borderRadius: '8px',\n        border: '1px solid #ddd',\n        width: '80%',\n        marginBottom: '1rem',\n        fontSize: '1rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      disabled: loading || !file,\n      style: {\n        background: '#fa983a',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '8px',\n        padding: '0.7rem 1.5rem',\n        fontSize: '1rem',\n        cursor: loading ? 'not-allowed' : 'pointer',\n        marginBottom: '1rem'\n      },\n      children: loading ? 'Sending...' : 'Send PDF'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#f1f2f6',\n        borderRadius: '8px',\n        padding: '1rem',\n        minHeight: '2rem',\n        color: '#222'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Reply:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \" \", reply]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(ReportAssistant, \"RsysKhmn4xC/CLCtcoQbNFg4Ts0=\");\n_c = ReportAssistant;\nexport default ReportAssistant;\nvar _c;\n$RefreshReg$(_c, \"ReportAssistant\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ReportAssistant","_s","file","setFile","reply","setReply","loading","setLoading","handleFileChange","e","target","files","handleSend","res","fetch","method","headers","body","JSON","stringify","data","json","children","style","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","padding","borderRadius","border","width","fontSize","onClick","disabled","background","cursor","minHeight","_c","$RefreshReg$"],"sources":["C:/Users/sejal/Downloads/MediBot-main/MediBot-main/work/frontend/src/ReportAssistant.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ReportAssistant() {\r\n  const [file, setFile] = useState(null);\r\n  const [reply, setReply] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!file) return;\r\n    setLoading(true);\r\n    // Placeholder: No actual PDF upload yet\r\n    const res = await fetch('/api/report-assistant', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({})\r\n    });\r\n    const data = await res.json();\r\n    setReply(data.reply);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={{ color: '#fa983a', marginBottom: '1rem' }}>Report Assistant</h2>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/pdf\"\r\n        onChange={handleFileChange}\r\n        style={{\r\n          padding: '0.7rem',\r\n          borderRadius: '8px',\r\n          border: '1px solid #ddd',\r\n          width: '80%',\r\n          marginBottom: '1rem',\r\n          fontSize: '1rem',\r\n        }}\r\n      />\r\n      <br />\r\n      <button\r\n        onClick={handleSend}\r\n        disabled={loading || !file}\r\n        style={{\r\n          background: '#fa983a',\r\n          color: '#fff',\r\n          border: 'none',\r\n          borderRadius: '8px',\r\n          padding: '0.7rem 1.5rem',\r\n          fontSize: '1rem',\r\n          cursor: loading ? 'not-allowed' : 'pointer',\r\n          marginBottom: '1rem',\r\n        }}\r\n      >\r\n        {loading ? 'Sending...' : 'Send PDF'}\r\n      </button>\r\n      <div style={{ background: '#f1f2f6', borderRadius: '8px', padding: '1rem', minHeight: '2rem', color: '#222' }}>\r\n        <strong>Reply:</strong> {reply}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportAssistant;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}