{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sejal\\\\Downloads\\\\MediBot-main\\\\MediBot-main\\\\work\\\\frontend\\\\src\\\\ReportAssistant.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReportAssistant() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [reply, setReply] = useState('');\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSend = async () => {\n    if (!file) return;\n    // Placeholder: No actual PDF upload yet\n    const res = await fetch('/api/report-assistant', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    });\n    const data = await res.json();\n    setReply(data.reply);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Report Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Reply:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }, this), \" \", reply]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(ReportAssistant, \"eCc3USugitCy4MMHnoy6e4kEQCI=\");\n_c = ReportAssistant;\nexport default ReportAssistant;\nvar _c;\n$RefreshReg$(_c, \"ReportAssistant\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ReportAssistant","_s","file","setFile","reply","setReply","handleFileChange","e","target","files","handleSend","res","fetch","method","headers","body","JSON","stringify","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sejal/Downloads/MediBot-main/MediBot-main/work/frontend/src/ReportAssistant.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ReportAssistant() {\r\n  const [file, setFile] = useState(null);\r\n  const [reply, setReply] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!file) return;\r\n    // Placeholder: No actual PDF upload yet\r\n    const res = await fetch('/api/report-assistant', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({})\r\n    });\r\n    const data = await res.json();\r\n    setReply(data.reply);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Report Assistant</h2>\r\n      <input type=\"file\" accept=\"application/pdf\" onChange={handleFileChange} />\r\n      <button onClick={handleSend}>Send PDF</button>\r\n      <div><strong>Reply:</strong> {reply}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportAssistant;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACR,IAAI,EAAE;IACX;IACA,MAAMS,GAAG,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAE;MAC/CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAC7Bd,QAAQ,CAACa,IAAI,CAACd,KAAK,CAAC;EACtB,CAAC;EAED,oBACEL,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,iBAAiB;MAACC,QAAQ,EAAErB;IAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1EzB,OAAA;MAAQ6B,OAAO,EAAElB,UAAW;MAAAU,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CzB,OAAA;MAAAqB,QAAA,gBAAKrB,OAAA;QAAAqB,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACpB,KAAK;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACvB,EAAA,CA5BQD,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AA8BxB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}